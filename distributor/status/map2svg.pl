#!/usr/bin/perl
#
# map2svg.pl - Convert a map file to SVG (JavaScript-encoded to enable
#              inclusion in HTML).
#
use warnings;
use strict;

my @maps = @ARGV || <*.map>;
foreach ( @maps ) {
    s/\.map$//g or die "Can't translate filename $_";
}

open OUT, '>', 'maps.js' or die "Can't open maps.js: $!";
print OUT '// Generated by map2svg ',scalar localtime,"\n";
print OUT "document.write('\\\n";
foreach my $f ( @maps ) {
    open MAP, '<', "$f.map" or die "Can't open $f.map: $!";

    my ($w, $h) = (75,30);
    my $svg = '';
    my ($rows, $cols) = (0,0);
    while (<MAP>) {
        my ($loc, $name, $id) = split;
        next if !defined($loc) || $loc =~ m/^([#;']|$)/;
        my ($x, $y) = split ',', $loc;
        my ($boxx, $boxy) = ($x=~m/-/?0:($x*$w+20), $y=~m/-/?0:($y*$h+20));
        # Horizontal line
        if ( $x =~ m/([0-9.]+)?-([0-9.]+)?/ ) {
            my ($linestart,$lineend) = ('0%','100%');
            if ( defined($1) ) { $linestart = $1*$w+20; $cols = $1 if $1 > $cols }
            if ( defined($2) ) { $lineend = $2*$w+20; $cols = $2 if $2 > $cols }
            my $liney = $boxy+$h/2;
            $svg .= "  <line x1=$linestart y1=$liney x2=$lineend y2=$liney />\n";
        }
        # Vertical line
        elsif ( $y =~ m/([0-9.]+)?-([0-9.]+)?/ ) {
            my ($linestart,$lineend) = ('0%','100%');
            if ( defined($1) ) { $linestart = $1*$h+20; $rows = $1 if $1 > $rows }
            if ( defined($2) ) { $lineend = $2*$h+20; $rows = $2 if $2 > $rows }
            my $linex = $boxx+$w/2;
            $svg .= "  <line y1=$linestart x1=$linex y2=$lineend x2=$linex />\n";
        }
        # Node
        else {
            if ( $name =~ s/^#// ) { $name =~ s/_/ /g }
            else {
                $id ||= $name;
                $svg .= "  <rect x=$boxx y=$boxy width=$w height=$h class=\"node\" id=\"map-$f-$id\" />\n";
            }
            $svg .= "  <text x=".($boxx+$w/2)." y=".($boxy+$h*.7)." text-anchor=middle>$name</text>\n";
            $rows = $y if $y > $rows;
            $cols = $x if $x > $cols;
        }
    }
    my ($svgw,$svgh) = (($cols+1)*$w+40,($rows+1)*$h+40);
    $svg = <<EOF;
<div class="panel map" id="map-$f">
<svg xmlns="http://www.w3.org/2000/svg" version="1.1"
     width="$svgw" height="$svgh">\n$svg</svg>
</div>
EOF
    $svg =~ s/([^-_=\<\>:.\/0-9a-zA-Z "\n])/\\$1/g;
    $svg =~ s/\n/\\n\\\n/g;
    print OUT $svg;
    close MAP;
}
print OUT "');\n";
close OUT;
